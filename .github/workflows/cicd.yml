name: Deploy to GCE with Blue-Green (nunsub)

on:
  push:
    branches:
      - main

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GAR_LOCATION: us-west1
  SERVICE_NAME: nunsub-backend

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
      - name: Build and Push Docker Image
        run: |-
          gcloud builds submit --region=${{ env.GAR_LOCATION }} --tag ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.SERVICE_NAME }}/${{ env.SERVICE_NAME }}:${{ github.sha }}

  deploy:
    name: Deploy to GCE with Blue-Green Deployment
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Deploy to GCE
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.GCE_HOST }}
          username: ${{ secrets.GCE_USERNAME }}
          key: ${{ secrets.GCP_SSH_PRIVATE_KEY }}
          script: |
            cd /home/ubuntu/nunsub-backend
            
            # .env 파일 생성
            echo "POST_DB_URL=${{ secrets.POST_DB_URL }}" > .env
            echo "POST_DB_USERNAME=${{ secrets.POST_DB_USERNAME }}" >> .env
            echo "POST_DB_PASSWORD=${{ secrets.POST_DB_PASSWORD }}" >> .env
            echo "DDL_AUTO=${{ secrets.DDL_AUTO }}" >> .env
            echo "SHOW_SQL=${{ secrets.SHOW_SQL }}" >> .env
            echo "MONGO_DB_URl=${{ secrets.MONGO_DB_URl }}" >> .env
            echo "REDIS_HOST=${{ secrets.REDIS_HOST }}" >> .env
            echo "REDIS_PORT=${{ secrets.REDIS_PORT }}" >> .env
            echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
            echo "JWT_ACCESS_TOKEN_EXPIRATION=${{ secrets.JWT_ACCESS_TOKEN_EXPIRATION }}" >> .env
            echo "JWT_REFRESH_TOKEN_EXPIRATION=${{ secrets.JWT_REFRESH_TOKEN_EXPIRATION }}" >> .env
            echo "JWT_SECONDARY_AUTH_TOKEN_EXPIRATION=${{ secrets.JWT_SECONDARY_AUTH_TOKEN_EXPIRATION }}" >> .env
            echo "OPENBANKING_CLIENT_ID=${{ secrets.OPENBANKING_CLIENT_ID }}" >> .env
            echo "OPENBANKING_CLIENT_SECRET=${{ secrets.OPENBANKING_CLIENT_SECRET }}" >> .env
            echo "OPENBANKING_REDIRECT_URI=${{ secrets.OPENBANKING_REDIRECT_URI }}" >> .env
            echo "OPENBANKING_CRYPTO_SECRET_KEY=${{ secrets.OPENBANKING_CRYPTO_SECRET_KEY }}" >> .env
            
            # Docker 인증 및 배포 스크립트 실행
            gcloud auth configure-docker us-west1-docker.pkg.dev
            docker-compose pull nunsub-backend-blue
            docker-compose pull nunsub-backend-green
            ./deploy.sh